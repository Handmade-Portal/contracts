openapi: 3.0.3
info:
  title: HandMadePortal Contracts - OpenAPI 3.0
  description:
    This is a sample HandmadePortal Server based on the OpenAPI 3.0 specification.
  license:
    name: MIT License
    url: https://github.com/Handmade-Portal/docs/blob/main/LICENSE
  version: 0.0.1
tags:
  - name: auth
    description: Operations related to user authentication
  - name: toys
    description: Operations related to toys
  - name: cart
    description: Operations related to shopping cart
  - name: order
    description: Operations related to orders
  - name: acquiring
    description: Operations related to payment acquiring

paths:
  /auth/login:
    post:
      tags:
        - auth
      summary: User logging page
      description: Authenticate a user and return an access token
      operationId: userLogin
      requestBody:
        description: Create a new pet in the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLoginRequest'
        required: true
      responses:
        '200':
          description: Successful user login
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserLoginResponse'
        '400':
          description: Invalid credentials
  /toys:
    get:
      tags:
        - toys
      summary: Get list of available toys
      description: Retrieves a list of available toys in the store with filtration
      operationId: getToysList
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ToysListResponse'
        '500':
          description: Internal server error
  /cart:
    post:
      tags:
        - cart
      summary: Add item to cart
      description: Adds a soft toy to the user's shopping cart
      operationId: addToCart
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddToCartRequest'
      responses:
        '200':
          description: Item added to cart successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddToCartResponse'
        '400':
          description: Invalid request to add item to cart
    get:
      tags:
        - cart
      summary: Show items in cart
      description: Displays list of all items in users cart
      operationId: showCartItems
      responses:
        '200':
          description: List of items displayed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShowCartItemsResponse'
        '500':
          description: Internal server error
  /order:
    post:
      tags:
        - order
      summary: Place an order
      description: Places a new order for the toys
      operationId: placeOrder
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderRequest'
      responses:
        '200':
          description: Successful order placement
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderResponse'
        '400':
          description: Invalid order request

  /acquiring/payment:
    post:
      tags:
        - acquiring
      summary: Process payment
      description: Initiates the payment process for a customer's order
      operationId: processPayment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentRequest'
      responses:
        '200':
          description: Successful payment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentResponse'
        '400':
          description: Invalid payment request

components:
  schemas:
    UserLoginRequest:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
      required:
        - username
        - password

    UserLoginResponse:
      type: object
      properties:
        accessToken:
          type: string

    ToysListResponse:
      type: array
      items:
        type: object
        properties:
          toyId:
            type: integer
          name:
            type: string
          description:
            type: string
          price:
            type: number

    AddToCartRequest:
      type: object
      properties:
        userId:
          type: integer
        toyId:
          type: integer
        quantity:
          type: integer
      required:
        - userId
        - toyId
        - quantity

    AddToCartResponse:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string

    ShowCartItemsResponse:
      type: array
      items:
        type: object
        properties:
          toyId:
            type: integer
          toyName:
            type: string
          quantity:
            type: integer
          price:
            type: number

    OrderRequest:
      type: object
      properties:
        items:
          type: array
          items:
            type: object
            properties:
              toyId:
                type: integer
              quantity:
                type: integer
      required:
        - items

    OrderResponse:
      type: object
      properties:
        orderId:
          type: integer
        totalAmount:
          type: number

    PaymentRequest:
      type: object
      properties:
        orderId:
          type: integer
        amount:
          type: number
      required:
        - orderId
        - amount

    PaymentResponse:
      type: object
      properties:
        transactionId:
          type: string